FROM oraclelinux:9 as java-builder

ARG JAVA_VERSION=11.0.22+7

# Update and upgrade packages
RUN dnf makecache && dnf upgrade -y

# Install basic packages 
RUN dnf install --disableplugin=subscription-manager --setopt=install_weak_deps=0 --setopt=tsflags=nodocs -y \
    ca-certificates \
    curl \
    jq \
    unzip \
    wget \
    && dnf clean --disableplugin=subscription-manager all 

# Install Open jdk 11 
COPY download_install_open_jdk.sh .
RUN chmod +x download_install_open_jdk.sh && ./download_install_open_jdk.sh ${JAVA_VERSION}

# Set JAVA_HOME and add Java to the PATH
ENV JAVA_HOME=/usr/java/openlogic-openjdk-${JAVA_VERSION}-linux-x64
ENV PATH=$JAVA_HOME/bin:$PATH


FROM oraclelinux:9 as final

# jenkins arguments
ARG user=jenkins
ARG group=jenkins
ARG uid=1000
ARG gid=1000
ARG http_port=8080
ARG agent_port=50000
ARG JENKINS_HOME=/var/jenkins_home
ARG JENKINS_VERSION=2.440.2
ARG JAVA_VERSION=11.0.22+7
ENV JAVA_HOME=/usr/java/openlogic-openjdk-${JAVA_VERSION}-linux-x64
ENV PATH=$JAVA_HOME/bin:$PATH
COPY --from=java-builder $JAVA_HOME $JAVA_HOME

RUN echo ${JAVA_HOME}
ENV JENKINS_HOME $JENKINS_HOME
ENV JENKINS_SLAVE_AGENT_PORT ${agent_port}

# Update and upgrade packages
RUN dnf makecache && dnf upgrade -y

# Jenkins is run with user `jenkins`, uid = 1000
# If you bind mount a volume from the host or a data container,
# ensure you use the same uid
RUN mkdir -p $JENKINS_HOME \
  && chown ${uid}:${gid} $JENKINS_HOME \
  && groupadd -g ${gid} ${group} \
  && useradd -N -d "$JENKINS_HOME" -u ${uid} -g ${gid} -l -m -s /bin/bash ${user}

# Ensuring path is there
# Create the destination directory if it does not exist
RUN mkdir -p /usr/share/jenkins
# Download jenkins 
RUN curl -fsSL https://get.jenkins.io/war-stable/${JENKINS_VERSION}/jenkins.war -o /usr/share/jenkins/jenkins.war \
&& chown -R ${user} "$JENKINS_HOME" 

# for main web interface:
EXPOSE ${http_port}

# will be used by attached agents:
EXPOSE ${agent_port}

USER ${user}

ENTRYPOINT [ "java", "-jar", "/usr/share/jenkins/jenkins.war" ]